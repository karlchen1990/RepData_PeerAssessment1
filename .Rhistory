arrive<-depart+hours(15)
arrive
arrive<-arrive+minutes(50)
arrive
skip()
swirl()
arrive
info()
skip()
?with_tz
with_tz(arrive,tzone="Asia/Hong_Kong")
with_tz(arrive,"Asia/Hong_Kong")
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
last_time<-mdy("June 17, 2008")
last_time<-mdy("June 17 2008")
last_time<-mdy("June 17 2008")
?interval
last_time<-mdy("Jun 17 2008")
last_time<-mdy("Jun,17,2008")
last_time
skip()
how_long
as.period(how_long)
stopwatch()
help(package=dplyr)
?strsplit
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","./projects/Week4/ss06hid.csv")
q1<-read.csv("./projects/Week4/ss06hid.csv")
head(q1,6)
head(q1,1)
str(q)
str(q1)
dim(q1)
strsplit(q1,"wgtp")
class(q1$WGTP)
names(q1)
strsplit(names(q1),"wgtp")
q1_ans<-strsplit(names(q1),"wgtp")
class(q1_ans)
q1_ans[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","./projects/Week4/GDP.csv")
q2<-read.csv("./projects/Week4/GDP.csv")
head(q2,1)
str(q2)
head(q2,6)
q2<-read.csv("./projects/Week4/GDP.csv",header = FALSE)
head(q2,6)
q2<-read.csv("./projects/Week4/GDP.csv",header = FALSE,skip=5)
head(q2,6)
?read.table
?gsub
class(q2$V5[1])
q2<-read.csv("./projects/Week4/GDP.csv",header = FALSE,skip=5,stringsAsFactors = FALSE)
class(q2$V5[1])
sub(",","",q2$V5[1])
gsub(",","",q2$V5[1])
q2<-read.csv("./projects/Week4/GDP.csv",header = FALSE,skip=5)
gsub(",","",q2$V5[1])
q2<-read.csv("./projects/Week4/GDP.csv",header = FALSE,skip=5,strip.white = TRUE)
gsub(",","",q2$V5[1])
class(gsub(",","",q2$V5[1]))
?mean
q2<-read.csv("./projects/Week4/GDP.csv",header = FALSE,skip=5,strip.white = TRUE,as.is = 5)
head(q2,6)
class(q2$V5[1])
?sapply
sapply(q2$V5[1],gsub)
sapply(q2$V5,gsub(",",""))
temp<-sapply(q2$V5,function(x) gsub(",","",x))
class(temp)
length(temp)
temp[1]
temp<-as.numeric(temp)
temp<-temp[which(!is.na(temp))]
length(temp)
temp<-as.numeric(temp)
mean(tmep)
mean(temp)
temp[1]
?mean
temp<-sapply(q2$V5,function(x) gsub(",","",x))
class(temp)
temp<-as.numeric(temp)
temp
q2$V5[192]
class(temp)
mean(temp,na.rm = TRUE)
mean(temp[1:190],na.rm = TRUE)
?grep
head(q2,6)
grep("^United",q2$V4,ignore.case = TRUE)
View(data_4_country)
gdp_country
names(gdp_country)
grep(".*fiscal.*",names(gdp_country))
head(gdp_country,1)
View(gdp_country)
View(gdp_country,1)
View(gdp_country)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","./projects/Week4/GDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","./projects/Week4/Country.csv")
q3<-read.csv("./projects/Week4/GDP.csv",header = FALSE,skip=5,strip.white = TRUE, stringsAsFactors = FALSE)
q3_prime<-read.csv("./projects/Week4/country.csv")
head(q3)
head(q3_prime)
q3<-tbl_df(q3)
q3<-select(q3,V1,V2,V4,V5)
q3
rownames(q3)<-c("CountryCode","Ranking","Long.Name","GDP")
colnames(q3)<-c("CountryCode","Ranking","Long.Name","GDP")
q3
q3_merged<-merge(q3,q3_prime)
q3_merged<-tbl_df(q3_merged)
q3_merged
View(q3_merged)
grep("Jun(?e)",q3_merged)
grep("June",q3_merged)
grep("June",q3_merged$Special.Notes)
View(q3_merged)
library(quantmo)
library(quantmod)
install.packages(quantmod)
install.packages("quantmod")
library(quantmod)
amzn=getSymbols("AMZN",auto.assign = TRUE)
amzn=getSymbols("AMZN",auto.assign = FALSE)
?getSymbols
sampleTimes = index(amzn)
?index
class(sampleTimes)
sampleTimes[1]
?ymd
temp<-ymd(sampleTimes)
temp[1]
help(pakcage=lubridate)
help(pakcage=lubridate)
help(pakcage =lubridate)
help(pakcage ="lubridate")
help(pakcage =="lubridate")
help(package="lubridate")
temp<.years(sampleTimes)==2012
temp<-years(sampleTimes)==2012
temp<-years(sampleTimes)
temp
temp[1]
class(sampleTimes)
sampleTimes[1]
temp<-year(sampleTimes)
temp[1]
a<-temp==2012
a[1]
rm("a")
length(which(temp==2012))
temp<-wday(sampleTimes)
temp[1]
levels(temp[1])
temp<-wday(sampleTimes,label=TRUE)
temp[1]
temp[11]==Mon
temp[11]=="Mon"
temp[1]=="Mon"
temp[1]=="Wed"
length(which(temp=="Mon"))
y_2012<-year(sampleTimes)
w_2012<-wday(sampleTimes,label = TRUE)
temp<-(y_2012==2012 & w_2012=="Mon")
length(which(temp))
grep("fiscal",data_4_country$Special.Notes)
?grep
grep(".*fiscal.*",data_4_country$Special.Notes)
data_4_country$Special.Notes[150]
data_4_country$Special.Notes[23]
data_4_country$Special.Notes[22]
data_4_country$Special.Notes[24]
data_4_country$Special.Notes[25]
data_4_country$Special.Notes[26]
data_4_country$Special.Notes[27]
data_4_country$Special.Notes[28]
data_4_country$Special.Notes[21]
data_4_country$Special.Notes[3]
class(data_4_country$Special.Notes)
grep(".*[Ff]iscal.*",data_4_country$Special.Notes)
grep(".*[Ff]iscal.*[Jj]un(e?)",data_4_country$Special.Notes)
temp<-sapply(q2$V5,function(x) gsub(",","",x))
temp<-as.numeric(temp)
mean(temp[1:190],na.rm = TRUE)
length(grep(".*[Ff]iscal.*[Jj]un(e?)",data_4_country$Special.Notes))
temp<-(y_2012==2012 & w_2012=="Mon")
length(which(temp))
library("swirl")
swirl()
install_course("Exploratory_Data_Analysis")
swirl()
?png
swirl()
str(mg)
str(mpg)
qplot(displ,hwy,data = mpg)
qplot(displ,hwy,data = mpg,color=drv)
qplot(displ,hwy,data = mpg,color=drvg,geom = c("point","smooth"))
qplot(displ,hwy,data = mpg,color=drv,geom = c("point","smooth"))
qplot(hwy,mpg,color=drv)
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,data = mpg,geom = "boxplot")
qplot(drv,hwy,data = mpg,geom = "boxplot",color=manufacturer)
qplot(hwy,data = mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets = .~drv)
qplot(hwy,data=mpg,drv~.,bindwidth=2)
qplot(hwy,data=mpg,facets=drv~.,bindwidth=2)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
head(mpg)
class(mpg$drv)
library("swirl")
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("adddPatt.R",local = TRUE)
source("adddPatt.R",local = TRUE)
source("addPatt.R",local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
dim(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-svd1$u %*% svd1$d %*% t(svd1v)
a1<-svd1$u %*% svd1$d %*% t(svd1)
a1<-(svd1$u * svd1$d[1]) %*% t(svd1)
a1<-(svd1$u[,1] * svd1$d[1]) %*% t(svd1[,1])
a1<-(svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2<-svd1$u[,1:2] %*% svd1$d[,1:2] %*% t(svd1$v[,1:2])
a2<-svd1$u[,1:2] %*% svd1$d[,1:2] %*% t(svd1$v[,1:2])
a2<-svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2<-svd1$u[1:2] %*% svd1$d[1:2] %*% t(svd1$v[1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(dplyr)
?summarise
summarise(group_by(mtcars, cyl), mean(disp))
?summarize_each
?barplot
?expression
?hist
expression("total PM"[2.5]*" emissions in 1'000 per year")
?"^"
?expression
?Subscript
?plotmath
?group_by
by_vs_am <- group_by(mtcars, vs, am)
by_vs_am
?summarise
summarise(mtcars, mean(disp)
)
summarise(group_by(mtcars, cyl), mean(disp))
mean(mtcars$disp)
?geom_bar
library("ggplot2")
?geom_bar
?ggplot2
?ggplot
?aes()
?fill
?geom_bar
? stat_count
?stat_identity
?facet_grid
?ggplot
?facet
?unzip
getdir()
getpwd()
getwd()
setwd("~/R/projects/reproducible/week2/RepData_PeerAssessment1")
unzip("activity.zip")
source('~/R/projects/reproducible/week2/repro.R')
hist(steps_pday$steps,main="Total Number of steps taken each day",xlab="steps")
avg_steps_pday<-summarise(group_by(activity,interval),steps=mean(steps,na.rm=TRUE))
plot(avg_steps_pday,type="l",main="average daily activity pattern",xlab="interval", ylab="steps")
head(avg_steps_pday)
rownames(avg_steps_pday)<-avg_steps_pday$interval
head(avg_steps_pday)
with(activity,lapply(interval,function(x){with(avg_steps_pday,lapply(interval,)})
activity_new<-activity[which(is.na(activity$steps)),]
head(activity_new)
class(activity$interval)
class(avg_steps_pday$interval)
lapply(activity_new$interval,function(x){lapply(avg_steps_pday$interval,function(xx){if(x==xx) activity_new$steps<-avg_steps_pday$steps})})
temp<-lapply(activity_new$interval,function(x){lapply(avg_steps_pday$interval,function(xx){if(x==xx) activity_new$steps<-avg_steps_pday$steps})})
?lapply
temp<-sapply(activity_new$interval,function(x){lapply(avg_steps_pday$interval,function(xx){if(x==xx) activity_new$steps<-avg_steps_pday$steps})})
?merge
?for
?"for"
temp<-sapply(activity_new$interval,function(x){for(i=0:length(avg_steps_pday$interval)){if(i==x){activity_new$steps[i]<-avg_steps_pday$steps[i]}}})
temp<-sapply(activity_new$interval,function(x){for(i in 1:length(avg_steps_pday$interval)){if(i==x){activity_new$steps[i]<-avg_steps_pday$steps[i]}}})
temp[[1]]
temp[1]
head(activity_new)
temp<-sapply(activity_new$interval,function(x){for(i in 1:length(avg_steps_pday$interval)){if(avg_steps_pday$steps[i]==x){activity_new$steps[i]<-avg_steps_pday$steps[i]}}})
head(activity_new)
activity_new$interval == avg_steps_pday$interval
?recycle
temp<-activity_new$interval == avg_steps_pday$interval
which(temp==FALSE)
which(temp=FALSE)
which(temp==TRUE)
for(i in length(activity$interval)){for(j in length(avg_steps_pday$interval){if(activity$steps[i]==NA & avg_steps_pday$interval[j]==activity$interval[i]){activity$steps[i]<-avg_steps_pday$steps[j]}})}
for(i in length(activity$interval)){for(j in length(avg_steps_pday$interval){if(activity$steps[i]==NA & avg_steps_pday$interval[j]==activity$interval[i]){activity$steps[i]<-avg_steps_pday$steps[j]}}}
for(i in length(activity$interval)){for(j in length(avg_steps_pday$interval){if(activity$steps[i]==NA & avg_steps_pday$interval[j]==activity$interval[i]){activity$steps[i]<-avg_steps_pday$steps[j]}}}
for(i in length(activity$interval))
{
for(j in length(avg_steps_pday$interval)
{
if(activity$steps[i]==NA & avg_steps_pday$interval[j]==activity$interval[i]){activity$steps[i]<-avg_steps_pday$steps[j]}}}
for(i in length(activity$interval)){for(j in length(avg_steps_pday$interval){if(activity$steps[i]==NA & avg_steps_pday$interval[j]==activity$interval[i]){activity$steps[i]<-avg_steps_pday$steps[j]}}}
for(i in length(activity$interval))
{
for(j in length(avg_steps_pday$interval)
{
if(activity$steps[i]==NA & avg_steps_pday$interval[j]==activity$interval[i])
{
activity$steps[i]<-avg_steps_pday$steps[j]
}
}
}
for(i in seq_along(activity$interval))
{
for(j in seq_along(avg_steps_pday$interval)
{
if(activity$steps[i]==NA & avg_steps_pday$interval[j]==activity$interval[i])
{
activity$steps[i]<-avg_steps_pday$steps[j]
}
}
}
for(i in seq_along(activity$interval)){for(j in seq_along(avg_steps_pday$interval){if(activity$steps[i]==NA & avg_steps_pday$interval[j]==activity$interval[i]){activity$steps[i]<-avg_steps_pday$steps[j]}})}
for(i in seq_along(activity$interval)){for(j in seq_along(avg_steps_pday$interval){if(activity$steps[i]==NA & avg_steps_pday$interval[j]==activity$interval[i]){activity$steps[i]<-avg_steps_pday$steps[j]}})}
for(i in seq_along(activity$interval)){for(j in seq_along(avg_steps_pday$interval){if(activity$steps[i]==NA & avg_steps_pday$interval[j]==activity$interval[i]){activity$steps[i]<-avg_steps_pday$steps[j]}})
for(i in seq_along(activity$interval))for(j in seq_along(avg_steps_pday$interval){if(activity$steps[i]==NA & avg_steps_pday$interval[j]==activity$interval[i]){activity$steps[i]<-avg_steps_pday$steps[j]}})
for(i in seq_along(activity$interval))for(j in seq_along(avg_steps_pday$interval)if(activity$steps[i]==NA & avg_steps_pday$interval[j]==activity$interval[i]){activity$steps[i]<-avg_steps_pday$steps[j])
for(i in seq_along(activity$interval))
{
for(j in seq_along(avg_steps_pday$interval))
{
if(is.na(activity$steps[i]) & avg_steps_pday$interval[j]==activity$interval[i])
{
activity$steps[i]<-avg_steps_pday$steps[j]
}
}
}
temp<-table(avg_steps_pday)
rownames(temp)
colnames(temp)
?table
?array
temp<-array(avg_steps_pday)
colnames(temp)
row.names(temp)
temp[1]
temp<-array(avg_steps_pday)
class(temp)
row.names(temp)
colnames(temp)
head(tmep)
head(temp)
which(activity_new$interval[1]==avg_steps_pday$interval)
head(activity_new)
which(activity_new$interval[2]==avg_steps_pday$interval)
which(activity_new$interval[2000]==avg_steps_pday$interval)
activity_new$interval[2000]
?transform
?data.frame
temp<-data.frame(avg_steps_pday$interval=avg_steps_pday$steps)
for(i in seq_along(activity$interval)){if(is.na(activity$steps[i])){print(activity$steps[i])}}
for(i in seq_along(activity$interval)){if(is.na(activity$steps[i])){which(activity$interval[i]==avg_steps_pday$interval)}}
for(i in seq_along(activity$interval)){if(is.na(activity$steps[i])){which(activity$interval[i]==avg_steps_pday$interval)}}
lapply(activity_new$interval,function(x){activity_new$steps<-avg_steps_pday$steps[which(x==avg_steps_pday$interval)]})
head(activity_new)
lapply(activity_new$interval,function(x){print(avg_steps_pday$steps[which(x==avg_steps_pday$interval))]})
lapply(activity_new$interval,function(x){print(avg_steps_pday$steps[which(x==avg_steps_pday$interval)])})
temp<-lapply(activity_new$interval,function(x){print(avg_steps_pday$steps[which(x==avg_steps_pday$interval)])})
lapply(activity_new$interval,function(x){activity_new$steps<-avg_steps_pday$steps[which(x==avg_steps_pday$interval)]})
head(activity_new)
temp<-group_by(activity,interval)
head(temp)
which(is.na(temp$steps))
?group_by
class(temp)
?summarise
?group_by
?summarize
?summarise_each
?aggregate
summarize_each(group_by(activity,interval),function {activity$steps[is.na(activity$steps)]<-mean(steps,na.rm = TRUE)})
?function
summarize_each(group_by(activity,interval),function() {activity$steps[is.na(activity$steps)]<-mean(steps,na.rm = TRUE)})
summarize_each(group_by(activity,interval),function(){activity$steps[is.na(activity$steps)]<-mean(steps,na.rm = TRUE)})
?summarize_each
summarise_all(group_by(activity,interval),funs(steps[is.na(steps)]<-mean(steps,na.rm = TRUE)))
?mutate
?replace
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
summarise_each(group_by(activity,interval),funs(impute.mean(x = steps)))
summarise_each(group_by(activity,interval),funs(impute.mean))
summarise_each(group_by(activity,interval),impute.mean)
head(activity)
head(avg_steps_pday)
?merge
temp<-merge(activity,avg_steps_pday,by=interval)
temp<-merge(activity,avg_steps_pday,by="interval")
head(temp)
tail(temp)
temp$steps.x[is.na(temp$steps.x)]<-temp$steps.y[is.na(temp$steps.x)]
tail(temp)
dim(temp)
?select
avg_steps_pday<-summarise(group_by(activity,interval),steps=mean(avg_steps,na.rm=TRUE))
avg_steps_pday<-summarise(group_by(activity,interval),avg_steps=mean(steps,na.rm=TRUE))
labeld_activity<-merge(activity,avg_steps_pday,by = interval)
labeld_activity<-merge(activity,avg_steps_pday,by = "interval")
head(labeld_activity)
tail(labeld_activity)
labeld_activity$steps[is.na(labeld_activity$steps)]<-labeld_activity$avg_steps[is.na(labeld_activity$steps)]
tail(labeld_activity)
activity_new<-select(labeld_activity,c("interval","steps","date"))
activity_new<-select(labeld_activity,interval,steps,date))
activity_new<-select(labeld_activity,interval,steps,date)
tail(activity_new)
steps_pday_new<-summarise(group_by(activity_new,date),steps=sum(steps,na.rm = FALSE))
hist(steps_pday_new$steps,main="Total Number of steps taken each day",xlab="steps")
mean_steps<-mean(steps_pday_new$steps)
median_steps<-median(steps_pday_new$steps)
mean_steps
median_steps
steps_pday<-summarise(group_by(activity,date),steps=sum(steps,na.rm = FALSE))
hist(steps_pday$steps,main="Total Number of steps taken each day",xlab="steps")
mean_steps<-mean(steps_pday$steps)
median_steps<-median(steps_pday$steps)
steps_pday_new<-summarise(group_by(activity_new,date),steps=sum(steps,na.rm = FALSE))
hist(steps_pday_new$steps,main="Total Number of steps taken each day",xlab="steps")
mean_steps_new<-mean(steps_pday_new$steps)
median_steps_new<-median(steps_pday_new$steps)
median_steps
median_steps_new
mean_steps<-mean(steps_pday$steps,na.rm = TRUE)
median_steps<-median(steps_pday$steps,na.rm = TRUE)
median_steps
temp<-which(weekdays(activity_new$date) %in% c("Saturday","Sunday"))
temp<-weekdays(activity_new$date)
Sys.setlocale("LC_TIME","English")
temp<-weekdays(activity_new$date)
temp<-which(weekdays(activity_new$date) %in% c("Saturday","Sunday"))
?weekdays
?mutate
mutate(activity_new,wk=weekdays(date))
temp<-mutate(activity_new,wk=weekdays(date))
class(temp$wk)
temp<-weekdays(activity_new$date) %in% c("Saturday","Sunday")
class(temp)
?as.factor
temp2<-as.factor(temp,levels=c("weekday","weekend"))
temp2<-as.factor(temp,labels=c("weekday","weekend"))
temp2<-as.factor(temp)
temp2<-as.factor(temp,c("weekday", "weekend"))
levels(temp)
levels(as.factor(temp))
levels(as.factor(temp))<-c("weekday", "weekend")
levels(temp2)<-c("weekday", "weekend")
temp2[1:10]
temp2<-factor(temp,labels=c("weekday", "weekend"))
temp2<-as.factor(temp,labels=c("weekday", "weekend"))
temp<-factor(weekdays(activity_new$date) %in% c("Saturday","Sunday"),c("Saturday","Sunday"))
temp<-factor(weekdays(activity_new$date) %in% c("Saturday","Sunday"),c("weekday","weekend"))
temp2[10]
temp[10]
temp<-weekdays(activity_new$date) %in% c("Saturday","Sunday")
temp2<-factor(temp,labels=c("weekday", "weekend"))
temp2[1:10]
temp3<-factor(weekdays(activity_new$date) %in% c("Saturday","Sunday"),labels=c("weekday","weekend"))
temp4<- weekdays(activity_new$date) %in% c("Saturday","Sunday") %>% factor(labels=c("weekday","weekend"))
activity_new$wk<- weekdays(activity_new$date) %in% c("Saturday","Sunday") %>% factor(labels=c("weekday","weekend"))
head(activity_new)
par(mfrow=c(2,1))
temp<-summarise(group_by(activity_new,interval,wk),steps=mean(avg_steps,na.rm=TRUE))
temp<-summarise(group_by(activity_new,interval,wk),steps=mean(steps,na.rm=TRUE))
head(temp)
?par
?qplot
library("ggplot2")
?qplot
qplot(interval,steps,data=temp,facets = .~wk)
qplot(interval,steps,data=temp,facets = .~wk,geom = "line")
